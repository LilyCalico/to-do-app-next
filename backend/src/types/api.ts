/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/tasks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** タスクリストの取得 */
        get: {
            parameters: {
                query?: {
                    status?: "OPEN" | "COMPLETED";
                    sortBy?: "position" | "createdAt";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            tasks?: components["schemas"]["Task"][];
                        };
                    };
                };
                401: components["responses"]["responses_Unauthorized"];
                500: components["responses"]["responses_ServerError"];
            };
        };
        put?: never;
        /** 新規タスクの作成 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TaskInput"];
                };
            };
            responses: {
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Task"];
                    };
                };
                400: components["responses"]["responses_BadRequest"];
                401: components["responses"]["responses_Unauthorized"];
                500: components["responses"]["responses_ServerError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tasks/{taskId}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                taskId: string;
            };
            cookie?: never;
        };
        /** タスク詳細の取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    taskId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Task"];
                    };
                };
                401: components["responses"]["responses_Unauthorized"];
                404: components["responses"]["responses_NotFound"];
                500: components["responses"]["responses_ServerError"];
            };
        };
        /** タスクの更新 */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    taskId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TaskUpdate"];
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Task"];
                    };
                };
                400: components["responses"]["responses_BadRequest"];
                401: components["responses"]["responses_Unauthorized"];
                404: components["responses"]["responses_NotFound"];
                500: components["responses"]["responses_ServerError"];
            };
        };
        post?: never;
        /** タスクの削除 */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    taskId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description タスクが正常に削除されました */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["responses_Unauthorized"];
                404: components["responses"]["responses_NotFound"];
                500: components["responses"]["responses_ServerError"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tasks/reorder": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** タスクの並び替え */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        taskId: string;
                        newPosition: number;
                    };
                };
            };
            responses: {
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example true */
                            success?: boolean;
                        };
                    };
                };
                400: components["responses"]["responses_BadRequest"];
                401: components["responses"]["responses_Unauthorized"];
                404: components["responses"]["responses_NotFound"];
                500: components["responses"]["responses_ServerError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Task: {
            taskId?: string;
            title?: string;
            /** @enum {string} */
            status?: "OPEN" | "COMPLETED";
            position?: number;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
        };
        TaskInput: {
            title: string;
            /**
             * @default OPEN
             * @enum {string}
             */
            status: "OPEN" | "COMPLETED";
        };
        TaskUpdate: {
            title?: string;
            /** @enum {string} */
            status?: "OPEN" | "COMPLETED";
            position?: number;
        };
        Error: {
            error?: string;
        };
    };
    responses: {
        /** @description リクエストが不正 */
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description 認証エラー */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description リソースが見つからない */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description サーバーエラー */
        ServerError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description 認証エラー */
        responses_Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description サーバーエラー */
        responses_ServerError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description リクエストが不正 */
        responses_BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description リソースが見つからない */
        responses_NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
